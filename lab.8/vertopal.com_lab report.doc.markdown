**РОССИЙСКИЙ УНИВЕРСИТЕТ ДРУЖБЫ НАРОДОВ**

**Факультет физико-математических и естественных наук**

**Кафедра прикладной информатики**

**ОТЧЕТ**

**по лабораторной работе № [8]{.ul}**

*[дисциплина: Операционные системы]{.ul}*

Студент группы [НПИбд-01-21]{.ul}

Студенческий билет № [1032205621]{.ul}

[Фамилия Имя Отчествo Дессие Абди Бедаса]{.ul}

**МОСКВА**

2020г.

Цель работы:

Познакомиться с операционной системой Linux. Получить практические
навыки работы с редактором vi, установленным по умолчанию практически во
всех дистрибутивах.

Ход работы:

Задание 1. Создание нового файла с использованием vi.

-   Создали каталог с именем \~/work/os/lab06.

```{=html}
<!-- -->
```
-   Перешли во вновь созданный каталог.

```{=html}
<!-- -->
```
-   Вызвали vi и создали файл hello.sh vi hello.sh.

```{=html}
<!-- -->
```
-   Нажали клавишу «i» и ввели следующий текст:

> \#!/bin/bash
>
> HELL=Hello
>
> function hello {
>
> LOCAL HELLO=World
>
> echo \$HELLO
>
> }
>
> echo \$HELLO
>
> hello

-   Нажали клавишу «Esc» для перехода в командный режим после завершения
    > ввода текста.

-   Нажали «:» для перехода в режим последней строки и внизу моего
    > экрана появилось приглашение в виде двоеточия.

```{=html}
<!-- -->
```
-   Нажали «w» и «q», а затем нажали клавишу «Enter» для сохранения
    > нашего текста и завершения работы.

```{=html}
<!-- -->
```
-   Сделали файл исполняемым, вызвав команду «chmod +x hello.sh».

Задание 2. Редактирование существующего файла

-   Вызвали vi на редактирование файла, команда: «vi
    > \~/work/os/lab06/hello.sh».

```{=html}
<!-- -->
```
-   Установили курсор в конец слова HELL второй строки.

```{=html}
<!-- -->
```
-   Перешли в режим вставки и заменили на HELLO. Нажали «Esc» для
    > возврата в командный режим.

```{=html}
<!-- -->
```
-   Установили курсор на четвертую строку и стерли слово LOCAL

```{=html}
<!-- -->
```
-   Перешли в режим вставки и набрали: «local»; нажали «Esc» для
    > возврата в командный режим.

```{=html}
<!-- -->
```
-   Установили курсор на последней строке файла. Вставили после неё
    > строку, содержащую «echo \$HELLO».

```{=html}
<!-- -->
```
-   Нажали «Esc» для перехода в командный режим.

-   Удалили последнюю строку.

```{=html}
<!-- -->
```
-   Ввели команду отмены изменений «u» для отмены последней команды.

```{=html}
<!-- -->
```
-   Ввели символ «:» для перехода в режим последней строки. Записали
    > произведённые изменения и вышли из vi.

Вывод:

В ходе работы мы познакомились с операционной системой Linux и получили
практические навыки работы с редактором vi, установленным по умолчанию
практически во всех дистрибутивах.

Ответы на контрольные вопросы:

-   *Командный режим* позволяет управлять курсором и вводить команды
    > редактирования.

> *Режим вставки* допускает производить ввод текста. При этом текст не
> будет восприниматься, как команды редактирования.
>
> *Режим последней строки* позволяет производить запись файла на диск и
> выходить из редактора vi. Кроме того, используя этот режим, можно
> вводить дополнительные команды редактирования.

-   Если необходимо просто выйти из vi (без сохранения выполненных
    > изменений), то необходимо в последней строке набрать символ q (или
    > q!).

-   Команды позиционирования:

> 0 (ноль) - перейти в начало строки;

\$ - перейти в конец строки;

G - перейти в конец файла;

nG - перейти на строку номер n.

-   Редактор vi предполагает, что слово - это строка символов, которая
    > может включать в себя буквы, цифры и символы подчеркивания.

-   0 (ноль) - перейти в начало строки;

\$ - перейти в конец строки.

-   *Добавление / вставка текста*

«а» - добавить текст после курсора;

«А» - добавить текст в конец строки;

«i» - вставить текст перед курсором;

«ni» - вставить текст n раз;

«I» - вставить текст в начало строки.

*Вставка строки*

«o» -вставить строку под курсором;

«О» - вставить строку над курсором.

*Удаление текста*

«x» - удалить один символ в буфер;

«dw» - удалить одно слово в буфер;

«d\$» - удалить в буфер текст от курсора до конца строки;

«d0» (ноль) - удалить в буфер текст от начала строки до позиции курсора;

«dd» - удалить в буфер одну строку;

> «10dd» - удалить в буфер 10 строк.

*Отмена и повтор произведенных изменений*

«u» - отменить последнее изменение;

«.» - повторить последнее изменение.

*Копирование текста в буфер*

«Y» - скопировать строку в буфер;

«nY» - скопировать n строк в буфер;

«yw» - скопировать слово в буфер;

*Вставка текста из буфера*

«p» - вставить текст из буфера после курсора;

«P» - вставить текст из буфера перед курсором.

*Замена текста*

«cw» - заменить слово;

«n cw» - заменить n слов;

«c\$» - заменить текст от курсора до конца строки;

«r» - заменить слово;

«R» - заменить текст.

*Поиск текста*

«/ \<текст\>» - произвести поиск вперед по тексту указанной строки
символов \<текст\>;

«? \<текст\>» - произвести поиск назад по тексту указанной строки
символов \<текст\>.

-   «c\$» - заменить текст от курсора до конца строки.

-   «u» - отменить последнее изменение.

-   *Копирование и перемещение текста*

«:n,m d» - уничтожить строки с n по m, пример: «: 3,8d»;

«: i,j m k» - переместить строки с i по j , начиная со строки k, пример:
«: 4,9m12»;

«: i,j t k» - копировать строки с i по j на строку k, пример: «: 2,5 t
13»;

«: i,j w \<имя_файла\>» - записать строки с i по j в файл с именем
\<имя_файла\>, пример: «: 5,9 \<имя \_файла\>»;

*Запись в файл и выход из редактора*

«:w» - записать измененный текст в файл на диске, не выходя из Vi;

«:w \<newfile\>» - записать измененный текст в новый файл с именем
\<newfile\>;

«:w! \<имя_файла\>» - записать измененный текст в файл с
именем\<имя_файла\> ;

«:wq» - записать изменения в файл и выйти из Vi;

«:q» - выйти из редактора Vi;

«:q!» - выйти из редактора без записи;

«:e!» - вернуться в командный режим, отменив все изменения,
произведенные со времени последней записи.

-   \$ - перемещает курсор в конец строки.

-   Опции редактора Vi позволяют настроить рабочую среду. Для задания
    > опций используется команда set (в режиме последней строки):

«: set all» - вывести полный список опций;

«: set nu» - вывести номера строк;

«: set list» - вывести невидимые символы;

«: set ic» - не учитывать при поиске, является ли символ прописным или
строчным.

-   Нажатие клавиши ESC всегда переводит Vi в командный режим (это
    > удобно, когда вы точно не помните в каком режиме находитесь). Если
    > вы нажмете клавишу ESC, находясь в командном режиме, машина
    > напомнит вам об этом, подав звуковой сигнал.

-   Командный --\>вставки-- \>последняя строка (командная строка).
