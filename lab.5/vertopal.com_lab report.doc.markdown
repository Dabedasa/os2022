**РОССИЙСКИЙ УНИВЕРСИТЕТ ДРУЖБЫ НАРОДОВ**

**Факультет физико-математических и естественных наук**

**Кафедра прикладной информатики**

**ОТЧЕТ**

**по лабораторной работе № [5]{.ul}**

*[дисциплина: Операционные системы]{.ul}*

Студент группы [НПИбд-01-21]{.ul}

Студенческий билет № [1032205621]{.ul}

[Фамилия Имя Отчествo Дессие Абди Бедаса]{.ul}

**МОСКВА**

2022 г.

**Цель работы:**

Ознакомиться с файловой системой Linux, её структурой, именами и
содержанием каталогов. Приобрети практические навыки по применению
команд для работы с файлами и каталогами, по управлению процессами (и
работами), по проверке использования диска и обслуживанию файловой
системы.

**Ход работы:**

-   Выполнили все примеры, приведённые в первой части описания

-   лабораторной работы.

```{=html}
<!-- -->
```
-   Выполнили следующие действия:

-   Скопировали файл /usr/include/sys/io.h в домашний каталог и назвали
    > его equipment.

-   В домашнем каталоге создали директорию \~/ski.plases.

-   Переместили файл equipment в каталог \~/ski.plases.

-   Переименовали файл \~/ski.plases/equipment в
    > \~/ski.plases/equiplist.

-   Создали в домашнем каталоге файл abc1 и скопировали его в каталог
    > \~/ski.plases, назвали его equiplist2.

-   Создали каталог с именем equipment в каталоге \~/ski.plases.

-   Переместили файлы \~/ski.plases/equiplist и equiplist2 в каталог
    > \~/ski.plases/equipment.

-   Создали и переместили каталог \~/newdir в каталог \~/ski.plases и
    > назвали его plans.

```{=html}
<!-- -->
```
-   Определили опции команды chmod, необходимые для того, чтобы
    > присвоить файлам australia, play, my_os и feathers следующие права
    > доступа соответственно, считая, что в начале таких прав нет:
    > drwxr\--r\--, drwx\--x---x, -r-xr\--r\--, -rw-rw-r\--.

```{=html}
<!-- -->
```
-   Проделали следующие упражнения:

-   Просмотрели содержимое файла /etc/password.

```{=html}
<!-- -->
```
-   Скопировали файл \~/feathers в файл \~/file.old.

-   Переместили файл \~/file.old в каталог \~/play.

-   Скопировали каталог \~/play в каталог \~/fun.

-   Переместили каталог \~/fun в каталог \~/play и назвали его games.

```{=html}
<!-- -->
```
-   Лишили владельца файла \~/feathers права на чтение.

-   Попытались просмотреть файл \~/feathers командой cat. Из-за лишения
    > права на чтение, сделать этого не получилось.

-   Попытались скопировать файл \~/feathers. Из-за лишения права на
    > чтение, сделать этого не получилось.

-   Дали владельцу файла \~/feathers право на чтение.

```{=html}
<!-- -->
```
-   Лишили владельца каталога \~/play права на выполнение.

-   Перешли в каталог \~/play. Ничего не изменилось, так как мы не
    > запускали каталог, а перешли в него, однако сама иконка каталога
    > изменилась.

-   Дали владельцу каталога \~/play право на выполнение.

```{=html}
<!-- -->
```
-   Прочитали man по командам mount, fsck, mkfs, kill.

```{=html}
<!-- -->
```
-   *mount* - нужна для просмотра смонтированных файловых систем, а
    > также для монтирования любых локальных или удаленных файловых
    > систем. Например, при вызове команды «mount /dev/cdrom /mnt/cdrom»
    > устройство /dev/cdrom монтируется в каталог /mnt/cdrom, если он
    > существует. Начиная от момента монтирования и пока пользователь не
    > отмонтирует файловую систему (или туда не будет смонтировано
    > что-то иное) в каталоге /mnt/cdrom будет содержаться дерево
    > каталогов устройства /dev/cdrom; те файлы, и подкаталоги, которые
    > раньше находились в /mnt/cdrom, сохранятся, но будут недоступны до
    > размонтирования устройства /dev/cdrom. Для размонтирования
    > достаточно указать точку монтирования или имя устройства, команда
    > «umount /dev/cdrom». При запуске команды mount без параметров
    > выводится список смонтированных файловых систем.

```{=html}
<!-- -->
```
-   *fsck* - fsck \[ -sAVRTNP \] \[ -C \[ fd \] \] \[ -t fstype \]
    > \[filesys ... \] \[\--\] \[ fs-specific-options \] - проверяет и
    > устраняет ошибки в файловой системе. Например, fsck -fy -t ext4
    > /dev/sda1. Опция -f (force) используется для принудительного
    > выполнения проверки. Опция -y (yes) позволяет программе
    > автоматически отвечать \"да\" на все вопросы в ходе работы.

```{=html}
<!-- -->
```
-   *mkfs* - действие заключается в создании указанной файловой системы
    > на выбранном диске или разделе. Например, команда «mkfs-text2
    > /dev/hda1» создает файловую систему ext2 на разделе hda1.

```{=html}
<!-- -->
```
-   *kill* - kill \[ -s сигнал \| -p \] \[ -a \] pid - kill -l \[ сигнал
    > \] - завершает некорректно работающее приложение. Например, чтобы
    > послать сигнал SIGKILL (он имеет номер 9) процессу 2811,
    > необходимо вызвать команду «kill -9 2811».

**Вывод:**

В ходе работы мы ознакомились с файловой системой Linux, а также
приобрели практические навыки по применению команд для работы с файлами
и каталогами, по управлению процессами, по проверке использования диска
и обслуживанию файловой системы.

**Ответы на контрольные вопросы:**

-   На компьютере в дисплейном классе есть следующие файловые системы:

-   TmpFS --- это быстрая и эффективная файловая система в ОЗУ, а не на
    > ПЗУ, как прочие ФС. Предназначена для временного хранения файлов с
    > оптимальным расходом памяти и скоростными характеристиками. Обычно
    > используется при монтировании в каталог /tmp, в котором много
    > постоянно меняющихся временных мелких файлов, поэтому может быть
    > целесообразно размещать их в памяти.

-   Ext4 - журналируемая файловая система, используемая в ОС на ядре
    > Linux. Основана на файловой системе Ext3, но отличается тем, что в
    > ней представлен механизм записи файлов в непрерывные участки
    > блоков (екстенты), уменьшающий фрагментацию и повышающий
    > производительность.

-   Файловая система в дисплейном классе содержит следующие каталоги
    > первого уровня:

-   /bin - Основные программы, необходимые для работы в системе:
    > командные оболочки shell, основные утилиты.

-   /boot - Каталог, который содержит ядро системы--- главную программу,
    > загружающую и исполняющую все остальные.

-   /dev - Каталог, в котором содержатся псевдофайлы устройств. С точки
    > зрения Linux все физические устройства, как главные, так и
    > периферийные, представляют собой файлы особого типа, в которые
    > система может записывать данные и из которых она может их
    > считывать. Пользователь не должен работать с этими файлами,
    > поскольку запись неправильных данных в файл устройства может
    > повредить устройство или хранящиеся на нём данные.

-   /etc - В этом каталоге содержатся системные конфигурационные файлы
    > --- текстовые файлы, которые считываются при загрузке системы и
    > запуске программ и определяют их поведение. Настройка и
    > администрирование Linux в конечном итоге сводится к редактированию
    > этих файлов, даже если оно выполняется при помощи графических
    > средств конфигурирования системы.

-   /home - В структуре файловой системы Linux каждый пользователь имеет
    > отдельный личный каталог для своих данных (т.н. домашний каталог),
    > и все пользовательские каталоги выделены в отдельный общий каталог
    > /home.

-   /mnt - Каталоги для монтирования файловых систем сменных устройств и
    > внешних файловых систем.

-   /proc - Файловая система на виртуальном устройстве, её файлы
    > содержат информацию о текущем состоянии системы.

-   /root - Каталог администратора системы.

-   /sbin - Системные утилиты.

-   /usr - Программы и библиотеки, доступные пользователю.

-   /var - Рабочие файлы программ, различные временные данные: очереди
    > (письма на отправку, файлы на печать и др.), системные журналы
    > (файлы, в которые записывается информация о происходящих в системе
    > событиях).

-   /tmp - Временные файлы.

-   Для того чтобы содержимое некоторой файловой системы было доступно
    > операционной системе, необходимо выполнить команду mount.

-   Некорректность файловой системы может возникать не только в
    > результате насильственного прерывания операций ввода-вывода,
    > выполняемых непосредственно с диском, но и в результате нарушения
    > работы дискового кэша. Кэширование данных с диска предполагает,
    > что в течение некоторого времени результаты операций ввода-вывода
    > никак не сказываются на содержимом диска --- все изменения
    > происходят с копиями блоков диска, временно хранящихся в буферах
    > оперативной памяти. В этих буферах оседают данные из
    > пользовательских файлов и служебная информация файловой системы,
    > такая как каталоги, индексные дескрипторы, списки свободных,
    > занятых и поврежденных блоков и т. п.

-   Разбитие диска на разделы и создание ФС в Linux делается при помощи
    > специальных утилит -- cfdisk fdisk sfdisk mke2fs mkfs mkfs.ext2
    > mkfs.ext3 mkfs.ext4 mkswap partimage parted указывая им в качестве
    > аргумента конкретное блочное устройство (/dev/\*\*\*). Блочные
    > устройства HDD вида /dev/sda можно использовать целиком для
    > единственной ФС, но это редко применяется на практике. Лучше
    > разделить все пространство на разделы меньшего размера и
    > использовать их под разные задачи.

-   Для просмотра небольших файлов удобно пользоваться командой cat.
    > Формат команды: cat имя-файла Для просмотра больших файлов
    > используйте команду less --- она позволяет осуществлять
    > постраничный просмотр файлов (длина страницы соответствует размеру
    > экрана). Формат команды: less имя-файла Для управления процессом
    > просмотра вы можете использовать следующие управляющие клавиши:
    > Пробел → переход на следующую страницу, ENTER → сдвиг вперед на
    > одну строку, b → возврат на предыдущую страницу, h → обращение за
    > подсказкой, q → выход в режим командной строки. Для просмотра
    > начала файла вы можете воспользоваться командой head. По умолчанию
    > она выводит первые 10 строк файла.

-   Копирование файлов и каталогов осуществляется при помощи команды cp.
    > Формат команды: cp\[-опции\] исходный_файл целевой_файл. Опция i в
    > команде cp поможет избежать уничтожения информации в случае, если
    > на место целевого файла вы поставите имя уже существующего файла:
    > система попросит подтвердить, что вы хотите перезаписать этот
    > файл. Команда cp с опцией r (recursive) позволяет копировать
    > каталоги вместе с входящими в них файлами и каталогами

-   Команды mv и mvdir предназначены для перемещения и переименования
    > файлов и каталогов. Формат команды: mv \[-опции\] старый_файл
    > новый_файл. Для получения предупреждения перед переписыванием
    > файла стоит использовать опцию i.

-   Права доступа определяют, кто и что может делать с содержимым файла.
    > Существуют три группы прав доступа: для владельца файла, для
    > членов группы, для всех остальных Для изменения прав доступа к
    > файлу или каталогу используется команда chmod. Права доступа к
    > файлу может поменять только владелец или суперпользователь
    > (администратор). Формат команды: chmod режим имя_файла. Режим (в
    > формате команды) имеет следующую структуру и способ записи:

-   = установить право;

-   \- лишить права;

-   \+ дать право;

-   r чтение;

-   w запись;

-   x выполнение;

-   u (user) владелец файла;

-   g (group) группа, к которой принадлежит владелец файла;

(others) все остальные
