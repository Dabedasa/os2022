**РОССИЙСКИЙ УНИВЕРСИТЕТ ДРУЖБЫ НАРОДОВ**

презентация **по лабораторной работе № [11]{.ul}**

*[дисциплина: Операционные системы]{.ul}*

Студент группы [НПИбд-01-21]{.ul}

Студенческий билет № [1032205621]{.ul}

[Фамилия Имя Отчествo Дессие Абди Бедаса]{.ul}

**МОСКВА**

20[22]{.ul} г.

Цель работы:

Изучить основы программирования в оболочке ОС UNIX. Научится писать
более сложные командные файлы с использованием логических управляющих
конструкций и циклов.

Ход работы:

-   Используя команды getopts grep, написали командный файл, который
    > анализирует командную строку с ключами:

-   -iinputfile --- прочитать данные из указанного файла;

-   -ooutputfile --- вывести данные в указанный файл;

-   -pшаблон --- указать шаблон для поиска;

-   -C --- различать большие и малые буквы;

-   -n --- выдавать номера строк. а затем ищет в указанном файле нужные
    > строки, определяемые ключом -p.

```{=html}
<!-- -->
```
-   Написали на языке Си программу, которая вводит число и определяет,
    > является ли оно больше нуля, меньше нуля или равно нулю. Затем
    > программа завершается с помощью функции exit(n), передавая
    > информацию о коде завершения в оболочку. Командный файл вызывает
    > эту программу и, проанализировав ее с помощью команды \$?, выдает
    > сообщение о том, какое число было введено.

```{=html}
<!-- -->
```
-   Написали командный файл, создающий указанное число файлов,
    > пронумерованных последовательно от 1 до N (1.txt, 2.txt и т.д.).
    > Число файлов, которые необходимо создать, передаётся в аргументы
    > командной строки. Этот же командный файл умеет удалять все
    > созданные им файлы (если они существуют).

```{=html}
<!-- -->
```
-   Написали командный файл, который с помощью команды tar запаковывает
    > в архив все файлы в указанной директории. Модифицировали его так,
    > чтобы запаковывались только те файлы, которые были изменены менее
    > недели тому назад (использовали команду find).

Вывод:

В ходе работы мы изучили основы программирования в оболочке ОС UNIX.
Научились писать более сложные командные файлы с использованием
логических управляющих конструкций и циклов.
